HR.appController.addTemplate("backbone/templates/scoring", function(obj) {
{
var __t, __p = "";
Array.prototype.join;
}
with (obj || {}) __p += '<div class="container--inner">\n    <header class="page-title">\n        <h1>Scoring Documentation</h1>\n    </header>\n    <div class="faq clearfix content-text">\n        ', 
__p += model.custom_documentation ? "\n        " + (null == (__t = model.custom_documentation) ? "" :__t) + "\n        " :'\n        <div class="doc_questions questions span5 pull-left">\n            <ul class="unstyled general">\n                <li class="title"><a class="backbone" href="/scoring/score-evaluation">Score Evaluation</a></li>\n                <li><a class="backbone" href="/scoring/competitive-games">1.1 Competitive Games</a>\n                    <ul class="unstyled general">\n                        <li><a class="backbone" href-"/scoring/gameplay">1.1.1 Game Play</a></li>\n                        <li><a class="backbone" href-"/scoring/state">1.1.2 State</a></li>\n                        <li><a class="backbone" href="/scoring/matchup">1.1.3 Matchup</a></li>\n                        <li><a class="backbone" href="/scoring/board-convention">1.1.4 Board Convention</a></li>\n                        <li><a class="backbone" href="/scoring/scoring">1.1.5 Scoring</a></li>\n                        <li><a class="backbone" href="/scoring/midnight-re-run">1.1.6 Midnight re-run</a></li>\n                        <li><a class="backbone" href="/scoring/choose-your-opponent">1.1.7 Choose your opponent</a></li>\n                        <li><a class="backbone" href="/scoring/playoffs">1.1.8 Playoffs</a></li>\n                    </ul>\n                </li>\n                <li><a class="backbone" href="/scoring/code-golf">1.2 Code Golf</a></li>\n                <li><a class="backbone" href="/scoring/algorithmic-challenges">1.3 Algorithmic Challenges</a>\n                    <ul class="unstyled general">\n                        <li><a class="backbone" href="/scoring/dynamic-scoring">1.3.1 Dynamic Scoring</a></li>\n                    </ul>\n                </li>\n                <li><a class="backbone" href="/scoring/single-player-games">1.4 Single Player Games</a></li>\n            </ul>\n            <ul class="unstyled challenges">\n                <li class="title"><a class="backbone" href="/scoring/leaderboards">Leaderboards</a></li>\n                <li><a class="backbone" href="/scoring/leaderboard-challenge-score">2.1 Challenge Score</a></li>\n                <li><a class="backbone" href="/scoring/leaderboard-hackerrank">2.2 HackerRank</a></li>\n                <li><a class="backbone" href="/scoring/leaderboard-network-leaderboard">2.3 Network Leaderboard</a></li>\n            </ul>\n            <ul class="unstyled">\n                <li class="title"><a class="backbone" href="/scoring/ratings">Rating</a></li>\n                <li><a class="backbone" href="/scoring/rating-track">3.1 Contest rating for a specific domain</a></li>\n                <li><a class="backbone" href="/scoring/rating-title">3.2 Titles on rating</a></li>\n            </ul>\n        </div>\n        <div class="content span10 pull-right">\n            <h2 id="score-evaluation" class="margin-large bottom"><strong>Score Evaluation</strong></h2>\n            <section id="competitive-games">\n                <h3>1.1 Competitive Games</h3>\n                <p>\n                In a two-player game, there are three components involved:\n                <ol>\n                    <li>Your Bot</li>\n                    <li>Opponent Bot</li>\n                    <li>Judge Bot</li>\n                </ol>\n                </p>\n                <p>\n                When you hit "Compile & Test", your bot plays a game against the judge bot. And when you hit "Submit Code", your bot plays\n                against a set of opponent bots.\n               </p>\n            </section>\n            <section id="gameplay">\n                <h4>1.1.1 Game Play</h4>\n                <p>\n                Every submission of yours will play two games with an opponent bot - one with you as the first player and the other with you as the second. Your code should be something similar to this...\n\n                <pre>\n                if (player == 1) { //logic}\n                else if (player == 2) {//logic}\n                </pre>\n                <p>\n                <p>\n                where <i>player</i> denotes which player you are and is usually given in the input.\n                </p>\n            </section>\n            <section id="state">\n                <h4>1.1.2 State</h4>\n                <p>\n                The goal of your code is to take a particular board state, and print the next move. The code checker takes care of passing the updated state of the board between the bots. The passing continues till one of the bots makes an invalid move, or the game is over. </br>\n                A bot can\'t maintain the state of the game within the code. The code is re-run for every move and hence each move should obey the <a href="https://www.hackerrank.com/environment">time constraints</a>. The bot can be made to remember a state by <a href="https://www.hackerrank.com/faq/can-i-write-to-file">writing to a file</a>\n                in its current directory.\n                </p>\n            <section id="matchup">\n                <h4>1.1.3 Matchup</h4>\n                <p>Your bot plays against every bot ranked 1-10, and then against randomly chosen bots from the rest. It will play against 1 of every 2 bots ranked 11-30, 1 of every 4 bots ranked 31-70,  1 of every 8 bots ranked 71-150, and so on.</p>\n            </section>\n            <section id="board-convention">\n                <h4>1.1.4 Board Convention</h4>\n                <p>Unless specified explicitly in the problem statement, any game played on a board follows the convention as displayed in the format below</p>\n                <p><img src="https://hr-filepicker.s3.amazonaws.com/matrix-convention.png"/></p>\n                <p>The board follows the matrix convention of Mathematics. A board of size m x n has top left indexed (0,0) and bottom right indexed (m-1,n-1). The row index increases from top to bottom, and the column index increases from left to right.</p>\n            </section>\n            <section id="scoring">\n                <h4>1.1.5 Scoring</h4>\n                <p>Bot v/s Bot games are evaluated based on <a href="http://jmlr.csail.mit.edu/papers/volume12/weng11a/weng11a.pdf" target="_blank">Bayesian Approximation</a>. Each game has 3 possible outcomes - win, loss or a draw. A win will have 1 associated with it, 0.5 for a draw and 0 for a loss.</p>\n                <p> Given &#956;<sub>i</sub>, &#963;<sup>2</sup><sub>i</sub> of Player i, we use the Bradley-Terry full pair update rules.</p>\n                <p>We obtain &#937;<sub>i</sub> and &#916;<sub>i</sub> for every player i using the following steps.</p>\n                <p>For q = 1,......,k, q!=i,</p>\n                <p>where <strong>q</strong> are the number of bots competing in a game</p>\n                <p class="math"><img src="https://s3.amazonaws.com/hr-logos/bayesian2.gif"/></p>\n                <p>where &#946; is the uncertainty in the score and is kept constant at 25/6.</p>\n                <p class="math"><img src="https://s3.amazonaws.com/hr-logos/bayesian3-1.png"/><img src="https://s3.amazonaws.com/hr-logos/bayesian3-2.png"/></p>\n                <p>where &gamma;<sub>q</sub> = &sigma;<sub>i</sub>/c<sub>iq</sub> and r(i) is the rank of a player i at the end of a game.</p>\n                <p>We get<p>\n                <p class="math"><img src="https://s3.amazonaws.com/hr-logos/bayesian4.gif"/></p>\n                <p>Now, the individual skills are updated using </p>\n                <p>j = 1,......,n<sub>i</sub></p>\n                <p class="math"><img src="https://s3.amazonaws.com/hr-logos/bayesian6.gif"/></p>\n                <p>where &kappa; = 0.0001. Its used to always have a positive standard deviation &#963;.</p>\n                <p>Score for every player is given as </p>\n                <p class="math"><img src="https://s3.amazonaws.com/hr-logos/bayesian7.png"/></p>\n                <p>&mu; for a new bot is kept at 25 and &sigma; at 25/3.</p>\n            </section>\n            <section id="midnight-re-run">\n                <h4>1.1.6 Midnight re-run</h4>\n                <p>Every midnight (pacific time) we will re-run all the active/valid bots that have been submitted in last 24 hours. They will play against each other according to the above formulas. These extra games will improve the accuracy of the rankings. </p>\n            </section>\n            <section id="choose-your-opponent">\n                 <h4>1.1.7 Choose your opponent</h4>\n                 <p>You can also choose specific bots to match-up against yours. These games will affect your rankings only if a lower ranked bot ends up drawing or winning against a higher ranked bot. </p>\n            </section>\n            <section id="playoffs">\n                 <h4>1.1.8 Playoffs</h4>\n                 <p>In addition, every midnight there will be another set of games - playoffs. All the bots will be matched based on their rankings and will play a series of games until the top two bots face each other. </p>\n            </section>\n            <section id="code-golf">\n                <h3>1.2 Code Golf</h3>\n                <p>In the Code Golf challenges, the score is based on the length of the code in characters. The shorter the code, the higher the score. The specific scoring details will be given in the challenge statement.</p>\n            </section>\n            <section id="algorithmic-challenges">\n                <h3>1.3 Algorithmic Challenges</h3>\n                <p>The algorithmic challenges come with test cases which can be increasingly difficult to pass. </p>\n                <p>The score will be based on the percentage of tests cases which your code passes. For example, if you pass 6 out of 10 tests cases, you will receive the points allotted for those 6 test cases. A correct and optimal solution will pass all the test cases. </p>\n                <section id="dynamic-scoring">\n                  <h4>1.3.1 Dynamic Scoring</h4>\n                  <p>For some challenges, we are introducing a new beta dynamic scoring pattern.\n                    Their maximum score will vary based on how submissions for that particular\n                    challenge perform. If a challenge is dynamically scored, we will explicitly\n                    mention it against the <em>Max score</em> on challenge page.\n                  </p>\n                  <p>\n                    This is how a submission score is calculated here:\n                  </p>\n                  <p>\n                    <strong>Lets say</strong>,<br/>\n                    <em>Total submissions</em> (one per hacker) for the challenge: <strong>total</strong><br/>\n                    <em>Solved submissions</em> (one per hacker) for the challenge: <strong>correct</strong><br/>\n                    Your submission <em>score factor</em> (lies between 0 and 1) based\n                    on correctness of the submission: <strong>sf</strong><br/>\n                    <em>Minimum score</em> a challenge can have: <strong>20</strong><br/>\n                    <em>Maximum score</em> a challenge can have: <strong>100</strong><br/>\n                  </p>\n                  <p>\n                    We calculate,<br/>\n                    <em>Success ratio</em>, <strong>sr</strong> = correct/total<br/>\n                    <em>Challenge factor</em> (rounded), <strong>cf</strong> = 20 +  (100 - 20)*(1 - sr)<br/>\n                  </p>\n                  <p>\n                    So, the <em>final score</em> for a submission, <strong>score</strong> = sf * cf\n                  </p>\n                </section>\n            </section>\n            <section id="single-player-games">\n                <h3>1.4 Single Player Games</h3>\n                <p>A single player game involves a bot interacting with an environment. The game ends when a terminating condition is reached. Scoring and terminating conditions are game dependent and the same shall be explained in the problem description.</p>\n            </section>\n            <h2 id="leaderboards" class="margin-large bottom"><strong>Leaderboards</strong></h2>\n            <section id="leaderboard-challenge-score">\n                <h3>2.1 Challenge Score</h3>\n                <p>The score for each type of challenge was presented above. The challenge leaderboard will display all the users based on the score of their most recent submission.</p>\n            </section>\n            <section id="leaderboard-hackerrank">\n                <h3>2.2 HackerRank</h3>\n                <p>You will get an overall classic rank, which will be based on the sum of scores of challenges you\'ve participated in.</p>\n                <p class="math"><img src="https://hr-filepicker.s3.amazonaws.com/challenge_score.png"/></p>\n            </section>\n            <section id="leaderboard-network-leaderboard">\n                <h3>2.3 Network Leaderboard</h3>\n                <p>For each network, the network rating is calculated as follows,</p>\n                <p>The difference (diff) between the highest score and the lowest is calculated.</p>\n                <p class="math"> <img src="https://static.interviewstreet.com/hackerrank/scoringimages/6.png"/></p>\n                <p>now the multiplicative factor f is calculated using</p>\n                <p class="math"> <img src="https://static.interviewstreet.com/hackerrank/scoringimages/7.png"/></p>\n                <p>Score for every network is calculated as</p>\n                <p class="math"> <img width="550" src="https://static.interviewstreet.com/hackerrank/scoringimages/8.png"/></p>\n                <p>This is done for networks whose count is greater than 10</p>\n            </section>\n            <h2 id="ratings" class="margin-large bottom"><strong>Rating</strong></h2>\n            <section id="rating-track">\n                <h3>3.1 Contest rating for a specific domain</h3>\n                <p>In this section, we will explain how ratings are calculated for different domains such as Algorithms, Artificial Intelligence and Functional Programming.</p>\n                <p>Rating calculation is also based on <a href="http://jmlr.csail.mit.edu/papers/volume12/weng11a/weng11a.pdf" target="_blank">Bayesian Approximation</a>. We will compete all hackers to each other and it has three possible outcomes - win, loss or a draw. A win will have 1 associated with it, 0.5 for a draw and 0 for a loss.</p>\n                <p> Given &#956;<sub>i</sub>, &#963;<sup>2</sup><sub>i</sub> of Player i, we use the Bradley-Terry full pair update rules.</p>\n                <p>We obtain &#937;<sub>i</sub> and &#916;<sub>i</sub> for every hacker i using the following steps.</p>\n                <p>For each hacker q other than i</o>\n                <p class="math"><img src="https://s3.amazonaws.com/hr-logos/bayesian2.gif"/></p>\n                <p>where &#946; is the uncertainty in the score and is kept constant at 300.</p>\n                <p class="math"><img src="https://s3.amazonaws.com/hr-logos/bayesian3-1.png"/><img src="https://s3.amazonaws.com/hr-logos/bayesian3-2.png"/></p>\n                <p>where &gamma;<sub>q</sub> = &sigma;<sub>i</sub>/c<sub>iq</sub> and r(i) is the rank of a player i in the contest.</p>\n                <p>We get<p>\n                <p class="math"><img src="https://s3.amazonaws.com/hr-logos/bayesian4.gif"/></p>\n                <p>Now, the individual skills are updated using </p>\n                <p>j = 1,......,n<sub>i</sub></p>\n                <p class="math"><img src="https://s3.amazonaws.com/hr-logos/bayesian6.gif"/></p>\n                <p>where &kappa; = 0.0001. Its used to always have a positive standard deviation &#963;.</p>\n                <p>Rating for every player is given as </p>\n                <p class="math">new_rating = &mu; - (1.8)&sigma;</p>\n                <p>Also &mu; is adjusted so that the absolute difference between new rating and old rating is no more than 200 + 400*0.9<sup>num_events</sup>, where num_events is the number of contests hacker participated. </p>\n                <p>&mu; for a new hacker is 90 and &sigma; is 30.</p>\n            </section>\n            <section id="rating-title">\n                <h3>3.2 Titles on rating</h3>\n                <p>In addition to rating score, each user has a title associated with his/her rating. We order all users by their rating and titles are given as follows.</p>\n                <ul>\n                    <li>Top 1% - O(1)</li>\n                    <li>Next 10% - O(logN)</li>\n                    <li>Next 20% - O(N)</li>\n                    <li>Next 30% - O(N<sup>2</sup>)</li>\n                    <li>Next 39%(remaining users) - O(2<sup>N</sup>)</li>\n                </ul>\n            </section>\n        </div>\n        ', 
__p += "\n    </div>\n</div>\n";
return __p;
});